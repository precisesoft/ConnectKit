name: E2E Testing

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]
  schedule:
    - cron: "0 4 * * *" # Daily at 4 AM UTC
  workflow_dispatch:
    inputs:
      browser:
        description: "Browser to test"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
          - mobile

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  setup:
    name: Setup E2E Environment
    runs-on: ubuntu-latest
    outputs:
      frontend_url: ${{ steps.urls.outputs.frontend_url }}
      api_url: ${{ steps.urls.outputs.api_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker Compose
        run: |
          echo "Starting application stack for E2E testing..."
          docker compose up -d

          # Wait for services
          echo "Waiting for services to be ready..."
          timeout 300 bash -c 'until curl -f http://localhost:3001/api/health; do sleep 5; done'
          timeout 300 bash -c 'until curl -f http://localhost:3000; do sleep 5; done'

          echo "✅ Services are ready"

      - name: Set URLs
        id: urls
        run: |
          echo "frontend_url=http://localhost:3000" >> $GITHUB_OUTPUT
          echo "api_url=http://localhost:3001/api" >> $GITHUB_OUTPUT

  e2e-chromium:
    name: E2E Tests - Chromium
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.browser == 'chromium' || github.event.inputs.browser == 'all' || github.event.inputs.browser == ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npx playwright install chromium

      - name: Run E2E tests - Chromium
        run: |
          cd frontend
          npx playwright test --project=chromium
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.setup.outputs.frontend_url }}
          API_URL: ${{ needs.setup.outputs.api_url }}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-chromium-results-${{ github.run_number }}
          path: |
            frontend/playwright-report/
            frontend/test-results/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## 🌐 E2E Tests - Chromium" >> $GITHUB_STEP_SUMMARY
          echo "✅ Tests completed" >> $GITHUB_STEP_SUMMARY

  e2e-firefox:
    name: E2E Tests - Firefox
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.browser == 'firefox' || github.event.inputs.browser == 'all'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npx playwright install firefox

      - name: Run E2E tests - Firefox
        run: |
          cd frontend
          npx playwright test --project=firefox
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.setup.outputs.frontend_url }}
          API_URL: ${{ needs.setup.outputs.api_url }}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-firefox-results-${{ github.run_number }}
          path: |
            frontend/playwright-report/
            frontend/test-results/
          retention-days: 30

  e2e-webkit:
    name: E2E Tests - WebKit
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.browser == 'webkit' || github.event.inputs.browser == 'all'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npx playwright install webkit

      - name: Run E2E tests - WebKit
        run: |
          cd frontend
          npx playwright test --project=webkit
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.setup.outputs.frontend_url }}
          API_URL: ${{ needs.setup.outputs.api_url }}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-webkit-results-${{ github.run_number }}
          path: |
            frontend/playwright-report/
            frontend/test-results/
          retention-days: 30

  e2e-mobile:
    name: E2E Tests - Mobile
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.browser == 'mobile' || github.event.inputs.browser == 'all'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npx playwright install

      - name: Create mobile test configuration
        run: |
          cd frontend
          cat > playwright.mobile.config.ts << 'EOF'
          import { defineConfig, devices } from '@playwright/test';

          export default defineConfig({
            testDir: './tests',
            fullyParallel: true,
            forbidOnly: !!process.env.CI,
            retries: process.env.CI ? 2 : 0,
            workers: process.env.CI ? 1 : undefined,
            reporter: 'html',
            use: {
              baseURL: process.env.PLAYWRIGHT_BASE_URL || 'http://localhost:3000',
              trace: 'on-first-retry',
              screenshot: 'only-on-failure',
            },
            projects: [
              {
                name: 'Mobile Chrome',
                use: { ...devices['Pixel 5'] },
              },
              {
                name: 'Mobile Safari',
                use: { ...devices['iPhone 12'] },
              },
              {
                name: 'Tablet',
                use: { ...devices['iPad Pro'] },
              },
            ],
          });
          EOF

      - name: Run E2E tests - Mobile
        run: |
          cd frontend
          npx playwright test --config=playwright.mobile.config.ts
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.setup.outputs.frontend_url }}
          API_URL: ${{ needs.setup.outputs.api_url }}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-mobile-results-${{ github.run_number }}
          path: |
            frontend/playwright-report/
            frontend/test-results/
          retention-days: 30

  visual-regression:
    name: Visual Regression Testing
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npx playwright install chromium

      - name: Create visual regression tests
        run: |
          mkdir -p frontend/tests/visual
          cat > frontend/tests/visual/visual.spec.ts << 'EOF'
          import { test, expect } from '@playwright/test';

          test.describe('Visual Regression Tests', () => {
            test('homepage visual test', async ({ page }) => {
              await page.goto('/');
              await expect(page).toHaveScreenshot('homepage.png', { 
                fullPage: true,
                animations: 'disabled' 
              });
            });
            
            test('login page visual test', async ({ page }) => {
              await page.goto('/login');
              await expect(page).toHaveScreenshot('login-page.png', {
                fullPage: true,
                animations: 'disabled'
              });
            });
            
            test('contacts page visual test', async ({ page }) => {
              await page.goto('/contacts');
              await expect(page).toHaveScreenshot('contacts-page.png', {
                fullPage: true,
                animations: 'disabled'
              });
            });
            
            test('responsive design - mobile', async ({ page }) => {
              await page.setViewportSize({ width: 375, height: 667 });
              await page.goto('/');
              await expect(page).toHaveScreenshot('homepage-mobile.png', {
                fullPage: true,
                animations: 'disabled'
              });
            });
            
            test('responsive design - tablet', async ({ page }) => {
              await page.setViewportSize({ width: 768, height: 1024 });
              await page.goto('/');
              await expect(page).toHaveScreenshot('homepage-tablet.png', {
                fullPage: true,
                animations: 'disabled'
              });
            });
          });
          EOF

      - name: Run visual regression tests
        run: |
          cd frontend
          npx playwright test tests/visual --update-snapshots
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.setup.outputs.frontend_url }}
        continue-on-error: true

      - name: Upload visual regression results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-results-${{ github.run_number }}
          path: |
            frontend/tests/visual/**/*.png
            frontend/playwright-report/
          retention-days: 30

  cleanup:
    name: Cleanup E2E Environment
    runs-on: ubuntu-latest
    needs:
      [e2e-chromium, e2e-firefox, e2e-webkit, e2e-mobile, visual-regression]
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Stop services
        run: |
          docker compose down -v
          echo "✅ E2E environment cleaned up"
        continue-on-error: true

      - name: Generate final report
        run: |
          echo "# 🎭 E2E Testing Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Browser Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Chromium" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Firefox" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ WebKit (Safari)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Mobile (iOS/Android)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Visual Regression" >> $GITHUB_STEP_SUMMARY
